{"ast":null,"code":"const initialState={items:[],loading:false,error:null};const productReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'FETCH_PRODUCTS_REQUEST':return{...state,loading:true};case'FETCH_PRODUCTS_SUCCESS':return{...state,loading:false,items:action.payload};case'FETCH_PRODUCTS_FAILURE':return{...state,loading:false,error:action.payload};default:return state;}};export default productReducer;","map":{"version":3,"names":["initialState","items","loading","error","productReducer","state","arguments","length","undefined","action","type","payload"],"sources":["C:/Users/lucca/Desktop/BootCamp/State-ReduxStore/src/redux/reducers/productReducer.js"],"sourcesContent":["const initialState = {\r\n    items: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n  \r\n  const productReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'FETCH_PRODUCTS_REQUEST':\r\n        return { ...state, loading: true };\r\n      case 'FETCH_PRODUCTS_SUCCESS':\r\n        return { ...state, loading: false, items: action.payload };\r\n      case 'FETCH_PRODUCTS_FAILURE':\r\n        return { ...state, loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default productReducer;\r\n  "],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IACT,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGN,YAAY,IAAE,CAAAS,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAClD,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,wBAAwB,CAC3B,MAAO,CAAE,GAAGL,KAAK,CAAEH,OAAO,CAAE,IAAK,CAAC,CACpC,IAAK,wBAAwB,CAC3B,MAAO,CAAE,GAAGG,KAAK,CAAEH,OAAO,CAAE,KAAK,CAAED,KAAK,CAAEQ,MAAM,CAACE,OAAQ,CAAC,CAC5D,IAAK,wBAAwB,CAC3B,MAAO,CAAE,GAAGN,KAAK,CAAEH,OAAO,CAAE,KAAK,CAAEC,KAAK,CAAEM,MAAM,CAACE,OAAQ,CAAC,CAC5D,QACE,MAAO,CAAAN,KAAK,CAChB,CACF,CAAC,CAED,cAAe,CAAAD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}